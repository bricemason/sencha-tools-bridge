#!/bin/bash
#
#  sencha-bridge
#
#  Allows Sencha SDK Tools for Sencha Touch 2.0
#  to co-exist with Sencha Cmd for Sencha Touch 2.1
#
#  by Brice Mason
#
#  http://www.bricemason.com
#  http://www.twitter.com/bricemason
#  http://www.github.com/bricemason
#  http://www.vimeo.com/bricemason
#  brice@bricemason.com

CMD=$1
SDKPATH=${2%/}
SDKPATHLINE="export PATH=$SDKPATH:\$PATH"
BRIDGEALIAS="alias sencha-legacy=\"\$SENCHA_SDK_TOOLS_2_0_0_BETA3/sencha\""

# formats
bold=`tput bold`
normal=`tput sgr0`

function header {
   echo "=================================================="
   echo "Sencha Tools Bridge by Brice Mason"
   echo "http://www.github.com/bricemason/sencha-tools-bridge"
   echo "=================================================="
}

function checkInputs {
   if [ -z $CMD ]; then
      echo "${bold}Usage Error:${bold}${normal}"
      echo "sencha-bridge install|uninstall 'pathToSDK'"
      exit
   fi

   if [ $CMD != "install" ] && [ $CMD != "uninstall" ]; then
      echo "${bold}Error:${bold}${normal} Invalid command, please use 'install' or 'uninstall'"
      exit
   fi

   if [ -z $SDKPATH ] || [ ! -d $SDKPATH ]; then
      echo "${bold}Error:${bold}${normal} Please provide a valid path to the Sencha SDK Tools"
      exit
   fi
}

function backupProfileScripts {
   cp ~/.bash_profile ~/.bash_profile.sencha-tools-bridge-save
   cp ~/.bashrc ~/.bashrc.sencha-tools-bridge-save
}

function removeLineFromFile {
   LINETOREMOVE="$1 $2"
   FROMFILE=$3
   CONTENT=""

   while read LINE
   do
      if [ "$LINE" != "$LINETOREMOVE" ]; then
         CONTENT="$CONTENT$LINE\n"
      fi 
   done < $FROMFILE

   # write the new file
   echo -e $CONTENT > $FROMFILE

   echo "Removed $LINETOREMOVE from $FROMFILE"
}

function addLineToFile {
   LINETOADD="$1 $2"
   TOFILE=$3

   if grep -F "$LINETOADD" $TOFILE; then
      return
   fi

   echo -e "$LINETOADD" >> $TOFILE

   echo "Added $LINETOADD to $TOFILE"
}

function install {
   echo "Installing Sencha Tools Bridge..."

   echo "Backing up profile scripts"
   backupProfileScripts

   echo "Removing Sencha SDK Tools from PATH"
   removeLineFromFile $SDKPATHLINE ~/.bash_profile
   removeLineFromFile $SDKPATHLINE ~/.bashrc

   echo "Creating alias to Sencha SDK Tools"
   addLineToFile $BRIDGEALIAS ~/.bash_profile
   addLineToFile $BRIDGEALIAS ~/.bashrc

   echo "--------------------------------------------------"
   echo "Sencha Tools Bridge installed successfully"
   echo "A backup of your profile scripts has been created in .bash_profile.sencha-tools-bridge-save and .bashrc.sencha-tools-bridge-save"
   echo "To use the Sencha SDK Tools, use the command 'sencha-legacy'"
   echo "To use Sencha Cmd, use the command 'sencha'"
}

function uninstall {
   echo "Uninstalling Sencha Tools Bridge..."

   echo "Backing up profile scripts"
   backupProfileScripts

   echo "Adding Sencha SDK Tools to PATH"
   addLineToFile $SDKPATHLINE ~/.bash_profile
   addLineToFile $SDKPATHLINE ~/.bashrc

   echo "Removing Sencha SDK Tools alias"
   removeLineFromFile $BRIDGEALIAS ~/.bash_profile
   removeLineFromFile $BRIDGEALIAS ~/.bashrc

   echo "--------------------------------------------------"
   echo "Sencha Tools Bridge unintalled successfully"
   echo "A backup of your profile scripts has been created in .bash_profile.sencha-tools-bridge-save and .bashrc.sencha-tools-bridge-save"
}

header
checkInputs

if [ $CMD == "install" ]; then
   install
else
   uninstall
fi